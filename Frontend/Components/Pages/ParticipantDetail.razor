@page "/conference/participants/{Id:int}"
@rendermode InteractiveServer
@using RESTful.Domain.DTOs
@using RESTful.Domain.Entities
@inject Frontend.Services.ConferenceService ConferenceService

<PageTitle>Профиль участника</PageTitle>

@if (isLoading)
{
    <div class="text-center">
<div class="spinner-border" role="status">
   <span class="visually-hidden">Загрузка...</span>
 </div>
    </div>
}
else if (participant == null)
{
  <div class="alert alert-danger" role="alert">
        Участник не найден.
    </div>
    <a href="/conference/participants" class="btn btn-secondary">Назад к списку</a>
}
else
{
<div class="mb-3">
 <a href="/conference/participants" class="btn btn-secondary">? Назад к списку</a>
    </div>

    <div class="card">
 <div class="card-header">
 <h3>
      @participant.FullName
    <span class="badge @(participant.Role == ParticipantRole.Speaker ? "bg-primary" : "bg-secondary") ms-2">
   @(participant.Role == ParticipantRole.Speaker ? "Докладчик" : "Слушатель")
   </span>
  </h3>
  </div>
      <div class="card-body">
            <div class="row">
     <div class="col-md-6">
      <h5>Основная информация</h5>
         <dl class="row">
          <dt class="col-sm-4">ФИО:</dt>
      <dd class="col-sm-8">@participant.FullName</dd>

      <dt class="col-sm-4">Место работы:</dt>
            <dd class="col-sm-8">@participant.WorkPlace</dd>

 @if (!string.IsNullOrEmpty(participant.AcademicDegree))
       {
             <dt class="col-sm-4">Ученая степень:</dt>
     <dd class="col-sm-8">@participant.AcademicDegree</dd>
     }

          @if (!string.IsNullOrEmpty(participant.AcademicTitle))
     {
        <dt class="col-sm-4">Ученое звание:</dt>
     <dd class="col-sm-8">@participant.AcademicTitle</dd>
  }

         <dt class="col-sm-4">Дата регистрации:</dt>
   <dd class="col-sm-8">@participant.RegistrationDate.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</dd>
          </dl>
            </div>

        <div class="col-md-6">
          <h5>Контактная информация</h5>
       <dl class="row">
       <dt class="col-sm-4">Email:</dt>
          <dd class="col-sm-8"><a href="mailto:@participant.Email">@participant.Email</a></dd>

        <dt class="col-sm-4">Телефон:</dt>
      <dd class="col-sm-8"><a href="tel:@participant.Phone">@participant.Phone</a></dd>
    </dl>
       </div>
            </div>
 </div>
    </div>

    @if (participant.Role == ParticipantRole.Speaker || presentations.Any())
    {
 <div class="card mt-4">
            <div class="card-header">
       <h4>Доклады</h4>
          </div>
      <div class="card-body">
    @if (loadingPresentations)
       {
          <div class="text-center">
   <div class="spinner-border spinner-border-sm" role="status">
         <span class="visually-hidden">Загрузка...</span>
        </div>
       </div>
                }
      else if (!presentations.Any())
     {
         <p class="text-muted">Нет докладов.</p>
   }
       else
  {
    @foreach (var presentation in presentations)
        {
     <div class="card mb-3">
      <div class="card-body">
     <h5 class="card-title">@presentation.Title</h5>
    
       @if (!string.IsNullOrEmpty(presentation.Abstract))
      {
     <p class="card-text">@presentation.Abstract</p>
     }

        <dl class="row mb-0">
       <dt class="col-sm-3">Основной докладчик:</dt>
            <dd class="col-sm-9">@presentation.MainSpeakerName</dd>

  @if (presentation.CoSpeakers?.Any() == true)
           {
               <dt class="col-sm-3">Содокладчики:</dt>
       <dd class="col-sm-9">
<ul class="mb-0">
 @foreach (var coSpeaker in presentation.CoSpeakers)
      {
              <li>
    @coSpeaker.ParticipantName
              @if (!coSpeaker.CanEdit)
        {
         <small class="text-muted">(Только чтение)</small>
  }
              </li>
 }
              </ul>
           </dd>
     }

     <dt class="col-sm-3">Дата создания:</dt>
                 <dd class="col-sm-9">@presentation.CreatedDate.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</dd>
    </dl>

          @if (presentation.MainSpeakerId != participant.Id)
        {
             <div class="alert alert-info mt-2 mb-0" role="alert">
       <small>
            <strong>Режим просмотра:</strong> Вы являетесь содокладчиком. 
         @if (presentation.CanEdit)
   {
       <text>У вас есть права на редактирование.</text>
           }
         else
    {
        <text>Доступен только режим чтения.</text>
    }
           </small>
        </div>
       }
 </div>
       </div>
          }
          }
    </div>
        </div>
 }
}

@code {
    [Parameter]
 public int Id { get; set; }

    private ParticipantResponseDto? participant;
    private List<PresentationResponseDto> presentations = new();
    private bool isLoading = true;
 private bool loadingPresentations = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadParticipant();
    }

    private async Task LoadParticipant()
    {
      isLoading = true;
    participant = await ConferenceService.GetParticipantByIdAsync(Id);
  
   if (participant != null)
 {
       loadingPresentations = true;
       presentations = await ConferenceService.GetParticipantPresentationsAsync(Id);
  loadingPresentations = false;
        }

        isLoading = false;
    }
}
